%YAML 1.2
---
name: Git Commit Message
file_extensions: [COMMIT_EDITMSG, MERGE_MSG]
scope: text.git-commit-msg

contexts:
  prototype:
    - include: comments

  main:
    # blank lines at the start are ignored.
    - match: (^\s*$)
    - match: (?:.{1,50})(.{0,22})(.*)
      captures:
        "0": summary
        "1": invalid.illegal.slightly-too-long
        "2": invalid.illegal.too-long
      push: second-line

  second-line:
    - match: (^(?!#)\s*\S+.*)
      scope: invalid.illegal.should-be-blank
      set: body
    - match: ^\s*$
      set: body

  body:
    - match: (?:.{1,72})(.*)
      scope: text.git-commit-msg.body
      captures:
        "1": invalid.illegal.too-long

  comments:
    # TODO: see if we can use meta_scope: comment.line.number-sign
    - match: ^#\sOn branch (.*)
      scope: comment.line.number-sign
      captures:
        "1": string.unquoted.branch-name
    - match: ^#\sYour branch is (?:(ahead) of|(behind)) '(.*)' by (\d+) commit(?:s?(?:\.|, and can be fast-forwarded\.))
      scope: comment.line.number-sign
      captures:
        "1": keyword.other.status
        "2": keyword.other.status
        "3": string.unquoted.branch-name.remote
        "4": constant.numeric
    - match: ^#\sYour branch is (up-to-date) with '(.*)'
      scope: comment.line.number-sign
      captures:
        "1": keyword.other.status
        "2": string.unquoted.branch-name.remote
    - match: ^#\sYour branch and '(.*)' have (diverged),
      scope: comment.line.number-sign
      captures:
        "1": string.unquoted.branch-name.remote
        "2": keyword.other.status
    - match: ^# and have (\d+) and (\d+) different commits each, respectively.
      scope: comment.line.number-sign
      captures:
        "1": constant.numeric
        "2": constant.numeric

    - match: ^#\s(Author:)\s+(.*)\s<([^>]+)>
      scope: comment.line.number-sign
      captures:
        "1": keyword.other.author
        "2": string.unquoted.name
        "3": string.unquoted.email

    - match: ^#\s(Date:)\s+(.*)
      scope: comment.line.number-sign
      captures:
        "1": keyword.other.date
        "2": string.unquoted.date

    # TODO: can I reduce this duplication??
    - match: ^#\s(Changes to be committed:)
      scope: comment.line.number-sign
      captures:
        "1": markup.heading
      push:
        - meta_include_prototype: false
        - match: ^#\s+(new file:)\s+(.*)
          scope: comment.line.number-sign
          captures:
            "1": markup.inserted
            "2": markup.inserted
        - match: ^#\s+(modified:)\s+(.*)
          scope: comment.line.number-sign
          captures:
            "1": markup.inserted
            "2": markup.changed
        - match: ^#\s+(deleted:)\s+(.*)
          scope: comment.line.number-sign
          captures:
            "1": markup.inserted
            "2": markup.deleted
        - match: ^#\s*$
          scope: comment.line.number-sign
          pop: true

    - match: ^#\s(Changes not staged for commit:)
      scope: comment.line.number-sign
      captures:
        "1": markup.heading
      push:
        - meta_include_prototype: false
        - match: ^#\s+(new file:|modified:|deleted:)\s+(.*)
          scope: comment.line.number-sign
          captures:
            "1": markup.changed
            "2": markup.changed
        - match: ^#\s*$
          scope: comment.line.number-sign
          pop: true

    - match: "^# (Untracked files:)"
      scope: comment.line.number-sign
      captures:
        "1": markup.heading
      push:
        - meta_include_prototype: false
        - match: ^#\s+(\S.*)$
          scope: comment.line.number-sign
          captures:
            "1": markup.untracked
        - match: ^#\s*$
          scope: comment.line.number-sign
          pop: true

    # Plain ol' comment
    - match: (^#.*$)
      scope: comment.line.number-sign

    - match: diff\ \-\-git
      # doesn't use comment scope
      set: "Packages/Diff/Diff.sublime-syntax"
